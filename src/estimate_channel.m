function hk = estimate_channel(block_count, block_size, num_chars, prefix_length)
    % generate a training block that's the first 64 bits (8 characters)
    training_block = transmitter.create_data(block_count, num_chars);

    % encode the samples with a cyclic prefix
    encoded_training_block = transmitter.encode_block(...
        training_block, ...
        prefix_length ...
        );

    % Reshape our block into a single line of data
    [sent_samples, received_samples] = transmitter.transmit(...
        encoded_training_block, ...
        prefix_length, ...
        block_count, ...
        num_chars ...
        );

    corrected_samples = receiver.time_correction(sent_samples, received_samples);

    decoded_samples = receiver.decode(...
        corrected_samples, ...
        block_count, ...
        block_size, ...
        prefix_length ...
        );

    flat_training_signals = reshape(training_block, 1, block_count * block_size);
    hk_arr = decoded_samples ./ flat_training_signals;

    % Find average channel estimate
    hk_block = reshape(hk_arr, [block_size, block_count]);
    hk = mean(hk_block, 2);
    hk = transpose(hk);
end
